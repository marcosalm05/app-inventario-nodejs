<!DOCTYPE html>
<html lang="es">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Búsqueda de Productos</title>
  <link rel="stylesheet" href="/styles.css" />
</head>

<body>
  <!-- Modal de Confirmación -->
  <div id="customConfirm" class="modal hidden" aria-hidden="true" role="dialog">
    <div class="modal-content">
      <p id="customConfirmMessage"></p>
      <div class="modal-actions">
        <button id="confirmYes" class="btn btn-confirm">Sí</button>
        <button id="confirmNo" class="btn btn-cancel">No</button>
      </div>
    </div>
  </div>

  <!-- Contenedor Principal -->
  <div class="container">
    <!-- Buscador -->
    <section class="search-section">
      <input type="text" id="searchInput" name="searchInput" placeholder="Ingrese el código del producto" autofocus aria-label="Buscar producto por código" />
      <button id="searchButton" class="btn-search">Buscar</button>
    </section>

    <!-- Resultados -->
    <div id="resultsContainer" class="accordion-container">
      <button class="accordion">Resultados de la Búsqueda</button>
      <div class="accordion-content">
        <p id="productResults"></p>
      </div>
    </div>
    
    <div id="errorContainer" class="error-message" aria-live="polite"></div>
    <div id="successContainer" class="success-message" aria-live="polite"></div>

    <!-- Stock -->
    <section id="stockContainer" class="stock-container hidden">
      <p><strong class="nuevo">Nuevo:</strong></p>
      <form id="stockForm">
        <input type="number" id="newStock" name="newStock" placeholder="Nuevo stock" aria-label="Ingrese el nuevo stock" />
        <button type="submit" class="btn-update">Actualizar Inventario</button>
        <button type="button" id="cancelButton" class="btn-cancel">Cancelar</button>
      </form>
    </section>

    <!-- Historial -->
    <section id="historyContainer" class="history-container">
      <button class="accordion" aria-expanded="false">
        <h2>Historial de Búsqueda</h2>
      </button>
      <div class="accordion-content hidden">
        <ul id="historyList" aria-live="polite"></ul>
        <button id="clearHistoryButton" class="btn-clear">Limpiar</button>
      </div>
    </section>
  </div>


  <script>
    document.addEventListener("DOMContentLoaded", function() {
      const searchInput = document.getElementById("searchInput");
      const searchButton = document.getElementById("searchButton");
      const clearHistoryButton = document.getElementById("clearHistoryButton");
      const stockForm = document.getElementById("stockForm");
      const cancelButton = document.getElementById("cancelButton");
      const errorContainer = document.getElementById("errorContainer");
      const successContainer = document.getElementById("successContainer");
      const historyList = document.getElementById("historyList");
      const stockContainer = document.getElementById("stockContainer");

      loadHistory();

      // Buscar producto
      searchButton.addEventListener("click", searchProduct());
      searchInput.addEventListener("keypress", (e) => {
        if (e.key === "Enter") searchProduct();
      });

      // Actualizar stock
      stockForm.addEventListener("submit", updateStock);
      cancelButton.addEventListener("click", resetStockForm);

      // Historial
      clearHistoryButton.addEventListener("click", clearHistory);

      function searchProduct() {
        const productCode = searchInput.value.trim();
        if (!productCode) return showError("Por favor, ingrese un código de producto.");

        fetch(`/products/api/search?cod=${productCode}&dep=1`, {
            method: "GET",
            headers: {
              Authorization: `Token ${localStorage.getItem("token")}`,
            },
          })
          .then((res) => res.json())
          .then((data) => handleSearchResult(data))
          .catch(() => showError("Ocurrió un error al buscar el producto."));
      }

      function handleSearchResult(data) {
        if (data.length > 0) {
          const product = data[0];
          displayProduct(product);
          stockContainer.dataset.productId = product.id;
          stockContainer.classList.remove("hidden");
        } else {
          showError("No se encontraron productos con ese código.");
          stockContainer.classList.add("hidden");
        }
      }

      function updateStock(event) {
        event.preventDefault();
        const newStock = parseInt(document.getElementById("newStock").value, 10);
        const productId = stockContainer.dataset.productId;

        if (isNaN(newStock)) return showError("Por favor, ingrese un valor numérico.");

        fetch("/products/api/inventory", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              Authorization: `Token ${localStorage.getItem("token")}`,
            },
            body: JSON.stringify({
              id: productId,
              stock: newStock,
              dep: 1
            }),
          })
          .then((res) => res.json())
          .then((data) => handleStockUpdate(data, newStock))
          .catch(() => showError("Ocurrió un error al actualizar el inventario."));
      }


      const accordion = document.querySelectorAll('.accordion');
      if (accordion.length) {
      accordion.forEach(item => {
      item.addEventListener("click", function () {
      this.classList.toggle("active");
      const content = this.nextElementSibling;
      const chevron = this.querySelector('.accordion-icon');

      if (content.style.display === "block") {
      content.style.display = "none";
      this.setAttribute("aria-expanded", "false");
      if (chevron) chevron.style.transform = "rotate(0deg)";
      } else {
      content.style.display = "block";
      this.setAttribute("aria-expanded", "true");
      if (chevron) chevron.style.transform = "rotate(180deg)";
      }
      });
      });
      }

      function handleStockUpdate(data, newStock) {
        if (data.success) {
          const product = data.data.product;
          const resultHTML = `
          <p><strong>Código:</strong> ${product.code}</p>
          <p><strong>Descripción:</strong> ${product.description}</p>
          <p><strong>Stock Anterior:</strong> ${product.stock - newStock}</p>
          <p><strong>Nuevo Stock:</strong> ${product.stock}</p>
    `;
          document.getElementById("productResults").innerHTML = resultHTML;
          document.querySelector(".accordion-content").style.display = "block";

          addToHistory(`Producto: ${product.description}, Código: ${product.code}, Stock Actualizado: ${product.stock}`);
          showSuccess(data.data.message);

        } else {

          showError(data.error || "No se pudo actualizar el inventario.");

        }
      }

      function showError(message) {
        errorContainer.textContent = message;
        errorContainer.style.display = "block";
        setTimeout(() => (errorContainer.style.display = "none"), 3000);
      }

      function showSuccess(message) {
        successContainer.textContent = message;
        successContainer.style.display = "block";
        setTimeout(() => (successContainer.style.display = "none"), 3000);
      }

      function addToHistory(item) {
        const li = document.createElement("li");
        li.textContent = item;
        historyList.appendChild(li);
        saveHistory();
      }

      function saveHistory() {
        const items = Array.from(historyList.children).map((li) => li.textContent);
        localStorage.setItem("history", JSON.stringify(items));
      }

      function loadHistory() {
        const items = JSON.parse(localStorage.getItem("history")) || [];
        items.forEach(addToHistory);
      }

      function clearHistory() {
        historyList.innerHTML = "";
        saveHistory();
      }

      function resetStockForm() {
        stockForm.reset();
        stockContainer.classList.add("hidden");
      }

      function displayProduct(product) {
   const resultHTML = `
   <p><strong>Código:</strong> ${product.code}</p>
   <p><strong>Descripción:</strong> ${product.description}</p>
   <p><strong>Stock Actual:</strong> ${product.stock}</p>
   `;
   document.getElementById("productResults").innerHTML = resultHTML;

   // Mostrar automáticamente el contenido del acordeón
   const content = document.querySelector(".accordion-content");
   if (content) {
   content.style.display = "block";
   document.querySelector(".accordion").setAttribute("aria-expanded", "true");
   }
   }

   });


   
  </script>
</body>

</html>